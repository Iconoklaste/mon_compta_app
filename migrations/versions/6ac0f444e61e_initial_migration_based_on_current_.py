"""Initial migration based on current models

Revision ID: 6ac0f444e61e
Revises: 
Create Date: 2025-04-26 16:00:36.160420

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6ac0f444e61e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organisation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('designation', sa.String(length=100), nullable=False),
    sa.Column('adresse', sa.String(length=200), nullable=True),
    sa.Column('code_postal', sa.String(length=5), nullable=True),
    sa.Column('ville', sa.String(length=100), nullable=True),
    sa.Column('telephone', sa.String(length=20), nullable=True),
    sa.Column('mail_contact', sa.String(length=100), nullable=True),
    sa.Column('logo', sa.LargeBinary(), nullable=True),
    sa.Column('logo_mimetype', sa.String(length=50), nullable=True),
    sa.Column('iban', sa.String(length=34), nullable=True),
    sa.Column('bic', sa.String(length=11), nullable=True),
    sa.Column('exonere_tva', sa.Boolean(), nullable=True),
    sa.Column('siret', sa.String(length=14), nullable=True),
    sa.Column('tva_intracommunautaire', sa.String(length=20), nullable=True),
    sa.Column('forme_juridique', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('siret'),
    sa.UniqueConstraint('tva_intracommunautaire')
    )
    op.create_table('app_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=50), nullable=False),
    sa.Column('prenom', sa.String(length=50), nullable=False),
    sa.Column('mail', sa.String(length=100), nullable=False),
    sa.Column('telephone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('is_super_admin', sa.Boolean(), nullable=False),
    sa.Column('is_demo', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mail')
    )
    op.create_table('compte_comptable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero', sa.String(length=20), nullable=False),
    sa.Column('nom', sa.String(length=150), nullable=False),
    sa.Column('type', sa.Enum('C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', name='classe_compte_enum', native_enum=False), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('solde_initial', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero', 'organisation_id', name='uq_compte_numero_organisation')
    )
    op.create_table('exercice_comptable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_debut', sa.Date(), nullable=False),
    sa.Column('date_fin', sa.Date(), nullable=False),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('adresse', sa.String(length=200), nullable=True),
    sa.Column('code_postal', sa.String(length=5), nullable=True),
    sa.Column('ville', sa.String(length=100), nullable=True),
    sa.Column('telephone', sa.String(length=20), nullable=True),
    sa.Column('mail', sa.String(length=100), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('compte_comptable_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['compte_comptable_id'], ['compte_comptable.id'], ),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('compte_comptable_id')
    )
    op.create_table('ecriture_comptable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_ecriture', sa.Date(), nullable=False),
    sa.Column('libelle', sa.String(length=255), nullable=False),
    sa.Column('reference_origine', sa.String(length=100), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('exercice_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercice_id'], ['exercice_comptable.id'], ),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ecriture_comptable', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ecriture_comptable_reference_origine'), ['reference_origine'], unique=False)

    op.create_table('ligne_ecriture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('montant_debit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('montant_credit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('libelle', sa.String(length=255), nullable=True),
    sa.Column('ecriture_id', sa.Integer(), nullable=False),
    sa.Column('compte_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('(montant_debit > 0 AND montant_credit = 0) OR (montant_credit > 0 AND montant_debit = 0) OR (montant_debit = 0 AND montant_credit = 0)', name='chk_debit_ou_credit_exclusif'),
    sa.CheckConstraint('montant_credit >= 0', name='chk_credit_non_negatif'),
    sa.CheckConstraint('montant_debit >= 0', name='chk_debit_non_negatif'),
    sa.ForeignKeyConstraint(['compte_id'], ['compte_comptable.id'], ),
    sa.ForeignKeyConstraint(['ecriture_id'], ['ecriture_comptable.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('date_debut', sa.Date(), nullable=True),
    sa.Column('date_fin', sa.Date(), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('prix_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipe_membre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('role_projet', sa.String(length=80), nullable=True),
    sa.Column('projet_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['projet_id'], ['projet.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financial_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('montant', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('mode_paiement', sa.String(length=50), nullable=True),
    sa.Column('projet_id', sa.Integer(), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('exercice_id', sa.Integer(), nullable=True),
    sa.Column('reglement', sa.String(length=20), nullable=True),
    sa.Column('compte_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['compte_id'], ['compte_comptable.id'], ),
    sa.ForeignKeyConstraint(['exercice_id'], ['exercice_comptable.id'], ),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.ForeignKeyConstraint(['projet_id'], ['projet.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes_reunion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('contenu', sa.Text(), nullable=False),
    sa.Column('projet_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['projet_id'], ['projet.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_phase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=255), nullable=False),
    sa.Column('date_debut', sa.Date(), nullable=True),
    sa.Column('date_fin', sa.Date(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('projet_id', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['projet_id'], ['projet.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('whiteboard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Text(), nullable=False),
    sa.Column('projet_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['projet_id'], ['projet.id'], name='fk_whiteboard_projet', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jalon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=255), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('atteint', sa.Boolean(), nullable=True),
    sa.Column('projet_id', sa.Integer(), nullable=False),
    sa.Column('phase_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['phase_id'], ['project_phase.id'], ),
    sa.ForeignKeyConstraint(['projet_id'], ['projet.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jalon')
    op.drop_table('whiteboard')
    op.drop_table('project_phase')
    op.drop_table('notes_reunion')
    op.drop_table('financial_transaction')
    op.drop_table('equipe_membre')
    op.drop_table('projet')
    op.drop_table('ligne_ecriture')
    with op.batch_alter_table('ecriture_comptable', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ecriture_comptable_reference_origine'))

    op.drop_table('ecriture_comptable')
    op.drop_table('client')
    op.drop_table('exercice_comptable')
    op.drop_table('compte_comptable')
    op.drop_table('app_user')
    op.drop_table('organisation')
    # ### end Alembic commands ###
